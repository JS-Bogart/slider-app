{"version":3,"sources":["components/arrow.jsx","components/slider.jsx","components/app.jsx","index.js"],"names":["Arrow","direction","clickFunction","glyph","className","onClick","Slider","slideIndex","previousIndex","data","src","image","alt","App","useState","setSlideIndex","setPreviousIndex","setDirection","useEffect","changeIndex","lastIndex","length","index","handleCirle","map","item","id","document","addEventListener","root","getElementById","ReactDOM","render"],"mappings":"oLAUeA,EARD,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,cAAeC,EAA7B,EAA6BA,MAA7B,OACZ,qBACEC,UAAS,gCAA2BH,GACpCI,QAAS,kBAAMH,EAAcD,IAF/B,SAGGE,KC8CUG,EAlDA,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,WAAYC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,KAAMR,EAAe,EAAfA,UAChD,MAAkB,UAAdA,EAEA,sBAEEG,UAAS,4BAAuBH,GAFlC,UAIE,qBACEG,UAAU,4BACVM,IAAG,iBAAYD,EAAKD,GAAeG,OACnCC,IAAKH,EAAKD,GAAeI,MAE3B,qBACER,UAAU,2BACVM,IAAG,iBAAYD,EAAKF,GAAYI,OAChCC,IAAKH,EAAKF,GAAYK,QAXnBL,GAec,SAAdN,EAEP,sBAEEG,UAAS,4BAAuBH,GAFlC,UAIE,qBACEG,UAAU,2BACVM,IAAG,iBAAYD,EAAKF,GAAYI,OAChCC,IAAKH,EAAKF,GAAYK,MAExB,qBACER,UAAU,4BACVM,IAAG,iBAAYD,EAAKD,GAAeG,OACnCC,IAAKH,EAAKD,GAAeI,QAXtBL,GAiBP,qBAAKH,UAAS,SAAd,SACE,qBACEA,UAAU,2BACVM,IAAG,iBAAYD,EAAKF,GAAYI,OAChCC,IAAKH,EAAKF,GAAYK,S,OCsCjBC,G,MA7EH,WAEV,MAAoCC,mBAAS,GAA7C,mBAAOP,EAAP,KAAmBQ,EAAnB,KACA,EAA0CD,mBAAS,MAAnD,mBAAON,EAAP,KAAsBQ,EAAtB,KACA,EAAkCF,mBAAS,SAA3C,mBAAOb,EAAP,KAAkBgB,EAAlB,KAEAC,qBAAU,cAEP,CAACX,IAEJ,IAAMY,EAAc,SAAClB,GACnBgB,EAAahB,GACb,IAAMmB,EAAaX,EAAKY,OAAS,EACjC,GAAkB,SAAdpB,EAAsB,CACxB,IACMqB,EADkC,IAAff,EACQa,EAAYb,EAAa,EAC1DS,EAAiBT,GACjBQ,EAAcO,OACT,CACL,IACMA,EADmBf,IAAea,EACP,EAAIb,EAAa,EAClDS,EAAiBT,GACjBQ,EAAcO,KAIZC,EAAc,SAACD,GACIL,EAAtBK,EAAQf,EAA2B,OAAuB,SAC3DS,EAAiBT,GACjBQ,EAAcO,IAGhB,OACE,sBAAKlB,UAAU,MAAf,UACE,gDAGA,sBAAKA,UAAU,aAAf,UACE,cAAC,EAAD,CACEH,UAAU,OACVC,cAAeiB,EACfhB,MAAM,WAER,qBAAKC,UAAU,cAAf,SACE,cAAC,EAAD,CACEG,WAAYA,EACZC,cAAeA,EACfC,KAAMA,EACNR,UAAWA,MAGf,cAAC,EAAD,CACEA,UAAU,QACVC,cAAeiB,EACfhB,MAAM,cAGV,qBAAKC,UAAU,aAAf,SACGK,EAAKe,KAAI,SAACC,EAAMH,GAAP,OACPA,IAAUf,EACT,mBAEEH,UAAU,mBACVC,QAAS,kBAAMkB,EAAYD,IAH7B,6BACUG,EAAKC,KAKf,mBAEEtB,UAAU,oBACVC,QAAS,kBAAMkB,EAAYD,IAH7B,6BACUG,EAAKC,eCrE3BC,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAOF,SAASG,eAAe,QACrCC,IAASC,OAAO,cAAC,EAAD,IAASH,O","file":"static/js/main.f89b4f32.chunk.js","sourcesContent":["import React from 'react';\n\nconst Arrow = ({ direction, clickFunction, glyph }) => (\n  <div\n    className={`slide-arrow arrow-dir-${direction}`}\n    onClick={() => clickFunction(direction)}>\n    {glyph}\n  </div>\n);\n\nexport default Arrow;","import React from \"react\";\n\nconst Slider = ({slideIndex, previousIndex, data, direction}) => {\n  if (direction === \"right\") {\n    return(\n      <div \n        key={slideIndex}\n        className={`slider slider-dir-${direction}`}\n      >\n        <img\n          className=\"slider-img previous-slide\"\n          src={`images/${data[previousIndex].image}`}\n          alt={data[previousIndex].alt}\n        />\n        <img\n          className=\"slider-img current-slide\"\n          src={`images/${data[slideIndex].image}`}\n          alt={data[slideIndex].alt}\n        />\n      </div>\n    )\n  } else if (direction === \"left\") {\n    return (\n      <div \n        key={slideIndex}\n        className={`slider slider-dir-${direction}`}\n      >\n        <img\n          className=\"slider-img current-slide\"\n          src={`images/${data[slideIndex].image}`}\n          alt={data[slideIndex].alt}\n        />\n        <img\n          className=\"slider-img previous-slide\"\n          src={`images/${data[previousIndex].image}`}\n          alt={data[previousIndex].alt}\n        />\n      </div>\n    )\n  } else {\n    return (\n      <div className={`slider`}>\n        <img\n          className=\"slider-img current-slide\"\n          src={`images/${data[slideIndex].image}`}\n          alt={data[slideIndex].alt}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Slider;","import React, {useState, useEffect} from \"react\";\nimport Arrow from \"./arrow\";\nimport Slider from \"./slider\";\nimport data from \"../assets/slider-data.json\"\nimport \"../stylesheets/application.scss\"\n\nconst App = () => {\n\n  const [slideIndex, setSlideIndex] = useState(0);\n  const [previousIndex, setPreviousIndex] = useState(null);\n  const [direction, setDirection] = useState(\"start\");\n\n  useEffect(() => {\n    \n  }, [slideIndex]);\n\n  const changeIndex = (direction) => {\n    setDirection(direction);\n    const lastIndex = (data.length - 1);\n    if (direction === \"left\") {\n      const shouldResetIndex = slideIndex === 0;\n      const index = shouldResetIndex ? lastIndex : slideIndex - 1;\n      setPreviousIndex(slideIndex);\n      setSlideIndex(index);\n    } else {\n      const shouldResetIndex = slideIndex === lastIndex;\n      const index = shouldResetIndex ? 0 : slideIndex + 1;\n      setPreviousIndex(slideIndex);\n      setSlideIndex(index);\n    }\n  }\n\n  const handleCirle = (index) => {\n    (index < slideIndex) ? setDirection(\"left\") : setDirection(\"right\");\n    setPreviousIndex(slideIndex);\n    setSlideIndex(index);\n  }\n\n  return(\n    <div className=\"app\">\n      <header>\n        Slider App\n      </header>\n      <div className=\"slider-box\">\n        <Arrow \n          direction=\"left\"\n          clickFunction={changeIndex}\n          glyph=\"&#9664;\"\n        />\n        <div className=\"slider-wrap\">\n          <Slider \n            slideIndex={slideIndex}\n            previousIndex={previousIndex}\n            data={data}\n            direction={direction}\n          />\n        </div>\n        <Arrow\n          direction=\"right\"\n          clickFunction={changeIndex}\n          glyph=\"&#9654;\"\n        />\n      </div>\n      <div className=\"circle-box\">\n        {data.map((item, index) => (\n          (index === slideIndex) ?\n            <p \n              key={`${item.id}`}\n              className=\"circle circle-hl\"\n              onClick={() => handleCirle(index)}\n            >&#9679;</p>\n          :\n            <p \n              key={`${item.id}`}\n              className=\"circle circle-nhl\"\n              onClick={() => handleCirle(index)}\n            >&#9679;</p>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app.jsx';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const root = document.getElementById(\"root\");\n  ReactDOM.render(<App />, root);\n});"],"sourceRoot":""}